class Solution {
    public List<List<String>> partition(String s) {
        List<String> ll=new ArrayList<>();
        List<List<String>> ans=new ArrayList<>();
        generate(s,ll,ans);
        return ans;
    }
    public static void generate(String s,List<String> ll,List<List<String>> ans){
        if(s==""){
            ans.add(new ArrayList<>(ll));
            return;
        }
        for(int i=1;i<=s.length();i++){
            String c=s.substring(0,i);
            //recursive call
            if(ispalindrome(c)){
                ll.add(c);
                generate(s.substring(i),ll,ans);
                ll.remove(ll.size()-1);
            }
        }

    }
    public static boolean ispalindrome(String s){
        int l=0;
        int r=s.length()-1;
        while(l<=r){
            if(s.charAt(l)!=s.charAt(r)){
                return false;

            }
            l++;
            r--;
        }
        return true;

    }
}
